use_git()
library(devtools)
use_git()
use_r("Plot_ancestry")
library(devtools)
use_r("Plot_ancestry")
load_all()
use_test()
check()
use_r("Pairwise_heatmap")
use_r("Div_Stats")
use_r("Div_Stats_Map")
use_r("Dif_stats")
use_r("Dif_stats_Map")
use_test()
`use_test()`
load_all()
use_gpl3_license()
use_gpl3_license()
document()
document()
document()
document()
document()
document()
document()
document()
check()
check()
library(devtools)
check()
use_package("adegenet","dartR", "dplyr", "ggplot2","gstat", "hierfstat", "poppr","raster", "rnaturalearth", "rnaturalearthdata", "scatterpie","stAMPP","sp", "vcfR")
use_package(c("adegenet","dartR", "dplyr", "ggplot2","gstat", "hierfstat", "poppr","raster", "rnaturalearth", "rnaturalearthdata", "scatterpie","stAMPP","sp", "vcfR")
)
use_package(c("adegenet","dartR", "dplyr", "ggplot2","gstat", "hierfstat", "poppr","raster", "rnaturalearth", "rnaturalearthdata", "scatterpie","stAMPP","sp", "vcfR"))
use_package("adegenet")
document
document()
document()
install.packages("StAMPP")
document()
library(devtools)
document()
document()
check()
document()
check()
document()
check()
document()
check()
document()
check()
document()
check()
document()
check()
document()
check()
install.packages("gtools")
library(devtools)
document()
check()
document()
check()
document()
check()
library(devtools)
Fst_dat <- read.csv('Test_Fst.csv')
View(Fst_dat)
Fst_dat <- read.csv('Test_Fst.csv', row.names = 1)
Loc_dat <- read.csv('Platyrhinos_Locdat.csv')
View(Loc_dat)
Loc_dat <- Loc_dat[,c(1,23,56)]
Loc_dat <- Loc_dat[,c(1,23,56),]
Loc_dat <- Loc_dat[c(1,23,56),]
colnames(Loc_dat) <- c('Sample', 'Population', 'Long', 'Lat')
Fst_dat <- list(Fst_dat, Loc_dat)
use_data(Fst_dat)
use_data_raw('Fst_prep')
use_data_raw('Fst_dat')
Het <- read.csv('CrBi_Heterozygosity.csv')
View(Het)
use_data_raw("Het_dat")
Het_dat <- read.csv('Test_Heterozygosity.csv')
View(Het_dat)
use_data(Het_dat)
View(Het_dat)
colnames
use_data_raw("Qmat")
Qmat <- read.csv('Test_Qmat.csv')
Loc_dat <- read.csv('Test_Popmap.csv')
Q_dat <- list(Qmat, Loc_dat)
View(Qmat)
Qmat <- Qmat[1:30,]
View(Qmat)
View(Loc_dat)
Q_dat <- list(Qmat, Loc_dat)
use_data(Q_dat)
document()
document()
check()
document()
check()
data(Het_dat)
View(Het_dat)
document()
Test_het <- Div_Stats_Map(dat = Het_dat, plot.type = 'all',
statistic = "Heterozygosity", countries = c('united states of america', 'mexico'),
Lat_buffer = 1, Long_buffer = 1, prefix = 'Test_het')
plot.type = 'all'
statistic = "Heterozygosity"
countries = c('united states of america', 'mexico')
Lat_buffer = 1
Long_buffer = 1
prefix = 'Test_het'
Long <- Lat <- x <- y <- NULL
stat <- as.character(statistic)
countries <- countries
Country_borders <- list()
for(i in 1:length(countries)) {
ncon <- 1:length(countries)
Country_borders[[i]] <- rnaturalearth::ne_states(country = countries[i], returnclass = 'sf')
names(Country_borders)[[i]] <- paste("Country", ncon[i], sep = "_")
}
world <- rnaturalearth::ne_countries(scale = "large", returnclass = "sf")
### Make a base map for the countries of interest
base_map <-  ggplot2::ggplot() + ggplot2::geom_sf(data = world, fill = 'grey99')
for(i in 1:length(countries)) {
base_map <- base_map + ggplot2::geom_sf(data = Country_borders[[i]], fill = "grey99")
}
Div_mat <- Het_dat
### Get coordinate ranges for our data
Lat_Min <- min(Div_mat$Lat) - Lat_buffer
Lat_Max <- max(Div_mat$Lat) + Lat_buffer
Long_Min <- min(Div_mat$Long) - Long_buffer
Long_Max <- max(Div_mat$Long) + Long_buffer
col <- c('#4575b4','#ffffbf','#d73027')
Breaks <- summary(Div_mat[,1])
Breaks <- as.numeric(Breaks[1:5])
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = stat), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right") +
ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
rlang::last_error()
rlang::last_trace()
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = Div_mat[,1]), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right") +
ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
View(Het_dat)
colnames(Div_mat)[4:5] <- c('Long', 'Lat')
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = Div_mat[,1]), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right") +
ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = statistic), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right") +
ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = stat), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right") +
ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = Heterozygosity), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right") +
ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
Breaks <- round(Breaks,2)
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = paste(statistic)), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right") +
ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = paste(stat)), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right") +
ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = Div_mat[,1]), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right") +
ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = Div_mat[,1]), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right", legend.title = statistic) +
ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = Div_mat[,1]), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right", legend.title = ggplot2::element_text(statistic)) +
ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = Div_mat[,1]), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right") + ggplot2::guide_legend(statistic) +
ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = Div_mat[,1]), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right") + ggplot2::guides(color = guide_legend(statistic)) +
ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = Div_mat[,1]), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right") + ggplot2::guides(color = ggplot2::guide_legend(statistic)) +
ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
base_map + ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat, color = Div_mat[,1]), shape = 19, size = 3) +
ggplot2::scale_color_gradient2(low = col[1], mid = col[2], high = col[3], midpoint = mean(Div_mat[,1]), breaks = Breaks, name = statistic) +
ggplot2::theme(panel.grid=ggplot2::element_blank(), legend.position = "right")  + ggplot2::xlab('Longitude') + ggplot2::ylab('Latitude')
sp::coordinates(Locs) <- c('Long', 'Lat')
Locs <- Div_mat[,4:5]
sp::coordinates(Locs) <- c('Long', 'Lat')
grd <- as.data.frame(sp::spsample(Locs,'regular', n=100000))
names(grd) <- c("X", "Y")
sp::coordinates(grd) <- c("X", "Y")
sp::gridded(grd)     <- TRUE  # Create SpatialPixel object
sp::fullgrid(grd)    <- TRUE  # Create SpatialGrid object
P.idw <- gstat::idw(Div_mat[,1] ~ 1, Locs, newdata=grd, idp=2.0)
r   <- raster::raster(P.idw)
R_pts <- raster::rasterToPoints(r, spatial = TRUE)
R_df <- data.frame(R_pts)
colnames(R_df)[1] <- z
colnames(R_df)[1] <- 'z'
ras_map <-  ggplot2::ggplot() + ggplot2::geom_sf(data = world, fill = 'grey99') +
ggplot2::geom_raster(data = R_df, ggplot2::aes(x = x, y= y, fill = z)) +
ggplot2::scale_fill_gradientn(colors = col, name = statistic)
for(i in 1:length(countries)) {
ras_map <- ras_map + ggplot2::geom_sf(data = Country_borders[[i]], fill = "NA")
}
ras_map +
ggplot2::coord_sf(xlim = c(Long_Min, Long_Max),  ylim = c(Lat_Min, Lat_Max)) +
ggplot2::geom_point(data = Div_mat, ggplot2::aes(x = Long, y = Lat), size = 3, shape = 21, fill = 'gray', color = "black") +
ggplot2::xlab("Longitude") + ggplot2::ylab ("Latitude") +
ggplot2::theme(panel.background = ggplot2::element_rect(color = "lightgray"), panel.grid = ggplot2::element_blank(),
axis.line = ggplot2::element_blank())
View(Het_dat)
colnames(Het_dat) <- colnames(Div_mat)
use_data(Het_dat)
use_data(Het_dat, overwrite = TRUE)
document()
check()
document()
check()
document()
check()
document()
check()
library(devtools)
use_vignette("PopGenHelpR_vignette")
# Load the package
library(PopGenHelpR)
data("Fst_dat")
data("Fst_dat")
data("Het_dat")
data("Q_dat")
data("Het_dat")
data("Q_dat")
Qmat <- Q_dat[[1]]
Loc <- Q_dat[[2]]
Test_all <- Plot_ancestry(anc.mat = Qmat, pops = Loc, K = 5,
plot.type = 'all', col = c('red', 'orange', 'pink', 'purple', 'blue'), countries = c("united states of america", "mexico"), Lat_buffer = 1, Long_buffer = 1)
load_all()
Test_all <- Plot_ancestry(anc.mat = Qmat, pops = Loc, K = 5,
plot.type = 'all', col = c('red', 'orange', 'pink', 'purple', 'blue'), countries = c("united states of america", "mexico"), Lat_buffer = 1, Long_buffer = 1)
Test_all$`Individual Map`
Test_all$`Population Map`
Fst <- Fst_dat[[1]]
Loc <- Fst_dat[[2]]
# Plot the heatmap
Fst_hmap <- Dif_Stats_Map(dat = Fst, pops = Loc, neighbors = 2,
countries = c('united states of america', 'mexico'),
col = c('#fd8d3c','#fc4e2a','#e31a1c','#bd0026','#800026'),
Lat_buffer = 1, Long_buffer = 1)
Fstat_hmap <- Pairwise_heatmap(dat = Fst, statistic = 'FST')
Fstat_hmap
Fst_map <- Dif_Stats_Map(dat = Fst, pops = Loc, neighbors = 1,
countries = c('united states of america', 'mexico'),
col = c('#fd8d3c','#fc4e2a','#e31a1c','#bd0026','#800026'),
Lat_buffer = 1, Long_buffer = 1)
Fst_map
Fst_map <- Dif_Stats_Map(dat = Fst, pops = Loc, neighbors = 1,
countries = c('united states of america', 'mexico'),
col = c('#fd8d3c','#fc4e2a','#e31a1c','#bd0026','#800026'),
Lat_buffer = 1, Long_buffer = 1)
Fst_map2 <- Dif_Stats_Map(dat = Fst, pops = Loc, neighbors = c('East_West', 'East_South', 'South_West'), countries = c('united states of america', 'mexico'),
col = c('#fd8d3c','#fc4e2a','#e31a1c','#bd0026','#800026'),
Lat_buffer = 1, Long_buffer = 1)
Fst_map2$`Differentiation Map`
Div_map <- Div_Stats_Map(dat = Het_dat, plot.type = 'point',
statistic = "Heterozygosity", countries = c('united states of america', 'mexico'), Lat_buffer = 1, Long_buffer = 1, prefix = 'Test_het')
Div_map$`Heterozygosity Map`
Div_map <- Div_Stats_Map(dat = Het_dat, plot.type = 'point',
statistic = "Heterozygosity", col = c('blue', 'orange', 'red'), countries = c('united states of america', 'mexico'), Lat_buffer = 1, Long_buffer = 1, prefix = 'Test_het')
Div_map$`Heterozygosity Map`
install()
browseVignettes("vignettes/PopGenHelpR_vignette.Rmd")
document()
check()
devtools::check_win_release()
use_pkgdown_github_pages()
use_pkgdown()
build_site()
use_pkgdown()
build_site()
build_site()
.Last.error.trace
build_site()
build_site()
document()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
document()
build_site()
build_site()
check()
build_site()
build_manual()
devtools::install_github("kfarleigh/PopGenHelpR")
unload("PopGenHelpR")
devtools::install_github("kfarleigh/PopGenHelpR")
library(PopGenHelpR)
?Div_stats
build_site()
build_site()
build_site()
devtools::install_github("ropenscilabs/travis")
library(pkgdown)
buld_home()
build_home()
usethis::use_github_action_check_standard()
build_home()
build_home()
build_home()
build_home()
build_home()
build_home()
build_home()
build_home()
build_home()
build_home()
build_home()
build_home()
build_home()
sethis::use_github_action("check-standard")
usethis::use_github_action("check-standard")
usethis::use_github_action("check-standard")
usethis::use_github_action("check-standard")
build_home()
build_home()
build_home()
build_site()
build_site()
build_site()
build_site()
build_home()
build_home()
build_home()
build_home()
pkgdown::preview_page('404.html')
build_home()
build_site()
